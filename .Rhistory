setwd("Y:/Data/CDC/BRFSS/workspace/")
library("RODBC")
#library("rClr")
#library("rsqlserver")
library("ggplot2")
library("lattice")
library("arm")
setwd("C:/Users/robinsonm/Documents/BRFSS-small-area-estimates")
library("RODBC")
library("ggplot2")
library("arm")
load("~/BRFSS-small-area-estimates/.RData")
gh_rdata <- data[sample(1:nrow(data), size=5000, replace=F, prob = as.integer(data$LLCPWT)), ]
statedata$FIPS <- formatC(statedata$FIPS, width=2, flag="0")
write.table(cbind(statedata, deparse.level = 1),
"statedata.txt",quote=TRUE,sep=",",col.names=TRUE,row.names=FALSE, na = "", append=FALSE) #output table
geo_shell$FIPS <- factor(formatC(geo_shell$FIPS, width=2, flag="0"))
write.table(cbind(geo_shell, deparse.level = 1),
"geo_shell.txt",quote=TRUE,sep=",",col.names=TRUE,row.names=FALSE, na = "", append=FALSE) #output table
gh_rdata <- data[sample(1:nrow(data), size=5000, replace=F, prob = as.integer(data$LLCPWT)), ]
write.table(cbind(gh_rdata, deparse.level = 1),
"gh_rdata.txt",quote=TRUE,sep=",",col.names=TRUE,row.names=FALSE, na = "", append=FALSE) #output table
geo_shell[geo_shell$STATE == 'DE', ])
geo_shell[geo_shell$STATE == 'DE', ]
geo_shell[geo_shell$FIPS == '10', ]
geo_shell[geo_shell$FIPS in ('42', '10'), ]
geo_shell <- geo_shell[geo_shell$FIPS in c('42', '10', '24', '34'), ]
geo_shell <- geo_shell[geo_shell$FIPS %in% c('42', '10', '24', '34'), ]
write.table(cbind(geo_shell, deparse.level = 1),
"geo_shell.txt",quote=TRUE,sep=",",col.names=TRUE,row.names=FALSE, na = "", append=FALSE) #output table
data <- read.table("gh_rdata.txt", header=TRUE, quote="\"", sep=",", dec = ".", stringsAsFactors=T) #saved input table
statedata <- read.table("statedata.txt", header=TRUE, quote="\"", sep=",", dec = ".", stringsAsFactors=T)
geo_shell <- read.table("geo_shell.txt", header=TRUE, quote="\"", sep=",", dec = ".", stringsAsFactors=T)
View(data)
View(geo_shell)
View(gh_rdata)
View(statedata)
stcols <- c("MSCODE", "AVG_AGE_G", "AVG_INCOME_SCALE",  "AVG_HISPANC2", "AVG_WHITE", "AVG_BLACK", "AVG_OTHER",  "AVG_MULTI", "AVG_GENHLTH", "AVG_GEN_VGEXCL", "AVG_GEN_FRPOOR")
gh_statedata <-  statedata[,names(statedata) %in% stcols]
statecormat <- cor(gh_statedata, y = NULL, use = "everything")
corrplot(statecormat, details = TRUE, abs = TRUE)
stcols <- c("MSCODE", "AVG_AGE_G", "AVG_INCOME_SCALE",  "AVG_HISPANC2", "AVG_BLACK", "AVG_GEN_VGEXCL")
plotmatrix(gh_statedata, colour="gray20")
?ggpairs
library(GGally)
intall.packages(GGally)
install.packages(GGally)
??GGally
pairs(gh_statedata, colour="gray20")
pairs(gh_statedata)
stcols <- c("MSCODE", "AVG_AGE_G", "AVG_INCOME_SCALE",  "AVG_HISPANC2", "AVG_BLACK", "AVG_GEN_VGEXCL")
gh_statedata <-  statedata[,names(statedata) %in% stcols]
pairs(gh_statedata)
stcols <- c("AVG_GEN_VGEXCL", "MSCODE", "AVG_AGE_G", "AVG_INCOME_SCALE",  "AVG_HISPANC2", "AVG_BLACK", "STATE")
gh_statedata <-  statedata[,names(statedata) %in% stcols]
pairs(gh_statedata)
pairs(gh_statedata, col=gh_statedata$MSCODE)
pairs(gh_statedata, col=gh_statedata$AVG_AGE_G)
pairs(gh_statedata, col=gh_statedata$STATE)
pairs(gh_statedata[, 0,1,6])
pairs(gh_statedata[, c(0,1,6)])
pairs(gh_statedata[, c(0,1,5)])
pairs(gh_statedata[, c(0,1,6)])
pairs(gh_statedata[, 0:5)])
pairs(gh_statedata[, 0:5])
pairs(gh_statedata[, 0:1, 4:5])
pairs(gh_statedata[, 0:3])
stcols <- c("AVG_GEN_VGEXCL", "MSCODE", "AVG_AGE_G", "AVG_INCOME_SCALE",  "AVG_BLACK", "STATE")
pairs(gh_statedata[, 0:3])
pairs(gh_statedata[, c(1, 2, 3, 5)])
pairs(gh_statedata[, c(0, 2, 3, 5)])
head(gh_statedata)
pairs(gh_statedata[, c(0, 1, 4, 5)])
pairs(gh_statedata[, c(1, 2, 5, 6)])
pairs(gh_statedata[, c(1, 2, 5, 6)], col=as.integer(MSCODE))
pairs(gh_statedata[, c(1, 2, 5, 6)], col=as.integer(gh_statedata$MSCODE))
as.integer(gh_statedata$MSCODE)
pairs(gh_statedata[, c(1, 2, 7, 6)], col=as.integer(gh_statedata$AVG_INCOME_SCALE))
pairs(gh_statedata[, c(6, 2, 5, 7)])
ghcols <- c("STATE", "LLCPWT", "MSLABEL", "MSLABEL", "INCOME", "INCOMELABEL", "AGE_GLABEL", "AGE_G", "RACELABEL", "GEN_VGEXCL", "ST_GEN_VGEXCL")
data <-  data[,names(datareduce) %in% ghcols]
head(data)
ghcols <- c("STATE", "LLCPWT", "MSLABEL", "INCOMELABEL", "AGE_GLABEL", "RACELABEL", "GEN_VGEXCL", "ST_GEN_VGEXCL")
data <-  data[,names(datareduce) %in% ghcols]
head(data)
data <- gh_rdata[complete.cases(gh_rdata), ]
head(data)
data <- data[complete.cases(data), ]
head(data)
data <- read.table("gh_rdata.txt", header=TRUE, quote="\"", sep=",", dec = ".", stringsAsFactors=T) #saved input table
ghcols <- c("STATE", "LLCPWT", "MSLABEL", "INCOMELABEL", "AGE_GLABEL", "RACELABEL", "GEN_VGEXCL", "ST_GEN_VGEXCL")
data <-  data[,names(data) %in% ghcols]
head(data)
summary(data)
head(data)
data <- data[complete.cases(data), ]
head(data)
gh_rdata$INCOMELABEL <- relevel(gh_rdata$INCOMELABEL, "I8")
gh_rdata$RACELABEL <- relevel(gh_rdata$RACELABEL, "RWH")
data$INCOMELABEL <- relevel(data$INCOMELABEL, "I8")
data$RACELABEL <- relevel(data$RACELABEL, "RWH")
levels(data)
levels(data$INCOMELABEL)
levels(data$INCOMELABEL)
levels(data$RACELABEL)
levels(data$INCOMELABEL)
levels(data$RACELABEL)
geo_shell[0:15, ]
geo_shell[0:40, ]
geo_shell[0:25, ]
geo_shell[0:10, ]
summary(geo_shell)
gh_glm <- glmer(GEN_VGEXCL ~  RACELABEL + INCOMELABEL + AGE_GLABEL + ST_GEN_VGEXCL + (1| MSLABEL:RACELABEL), family = "binomial", data = data)
data$ST_MSSTATUS <- statedata$MSCODE[data$FIPS]# wt. average metro code among tracts in state
data$ST_AVG_AGE <- statedata$AVG_AGE_G[data$FIPS]# wt. average age group among tracts in state
data$ST_AVG_INC <- statedata$AVG_INCOME_SCALE[data$FIPS]# wt. average age group among tracts in state
data$ST_PCT_HISP <- statedata$AVG_HISPANC2[data$FIPS]# wt. pct of survey respondents in state who are hispanic
data$ST_PCT_BLK <- statedata$AVG_BLACK[data$FIPS]# wt. pct of survey respondents in state who are black
data$ST_PCT_WHITE <- statedata$AVG_WHITE[data$FIPS]
data$ST_PCT_OTHER <- statedata$AVG_OTHER[data$FIPS]
data$ST_PCT_MULTI <- statedata$AVG_MULTI[data$FIPS]
data$ST_GENHLTH <- statedata$AVG_GENHLTH[data$FIPS]# wt. average general health scale
data$ST_GEN_VGEXCL <- statedata$AVG_GEN_VGEXCL[data$FIPS]
data$ST_GEN_FRPOOR <- statedata$AVG_GEN_FRPOOR[data$FIPS]
head(data)
data <- read.table("gh_rdata.txt", header=TRUE, quote="\"", sep=",", dec = ".", stringsAsFactors=T) #saved input table
data$ST_MSSTATUS <- statedata$MSCODE[data$FIPS]# wt. average metro code among tracts in state
data$ST_AVG_AGE <- statedata$AVG_AGE_G[data$FIPS]# wt. average age group among tracts in state
data$ST_AVG_INC <- statedata$AVG_INCOME_SCALE[data$FIPS]# wt. average age group among tracts in state
data$ST_PCT_HISP <- statedata$AVG_HISPANC2[data$FIPS]# wt. pct of survey respondents in state who are hispanic
data$ST_PCT_BLK <- statedata$AVG_BLACK[data$FIPS]# wt. pct of survey respondents in state who are black
data$ST_PCT_WHITE <- statedata$AVG_WHITE[data$FIPS]
data$ST_PCT_OTHER <- statedata$AVG_OTHER[data$FIPS]
data$ST_PCT_MULTI <- statedata$AVG_MULTI[data$FIPS]
data$ST_GENHLTH <- statedata$AVG_GENHLTH[data$FIPS]# wt. average general health scale
data$ST_GEN_VGEXCL <- statedata$AVG_GEN_VGEXCL[data$FIPS]
data$ST_GEN_FRPOOR <- statedata$AVG_GEN_FRPOOR[data$FIPS]
ghcols <- c("FIPS", "STATE", "LLCPWT", "MSLABEL", "INCOMELABEL", "AGE_GLABEL", "RACELABEL", "GEN_VGEXCL", "ST_GEN_VGEXCL")
data <-  data[,names(data) %in% ghcols]
head(data)
data <- data[complete.cases(data), ]
head(data)
levels(data$INCOMELABEL)
levels(data$RACELABEL)
data$INCOMELABEL <- relevel(data$INCOMELABEL, "I8")
data$RACELABEL <- relevel(data$RACELABEL, "RWH")
gh_glm <- glmer(GEN_VGEXCL ~  RACELABEL + INCOMELABEL + AGE_GLABEL + ST_GEN_VGEXCL + (1| MSLABEL:RACELABEL), family = "binomial", data = data)
predictsample <- data[sample(1:nrow(data), size=5000, replace=T, prob = as.integer(data$LLCPWT)), ]
predictsample$PR_GEN_VGEXCL1 <- predict(
gh_glm, type = "response", newdata = predictsample, allow.new.levels = TRUE)
summary(predictsample$PR_GEN_VGEXCL1)
summary(predictsample$GEN_VGEXCL)
summary(predictsample$ST_GEN_VGEXCL)
xyplot(PR_GEN_VGEXCL1~ AGE_G | STATE, data = predictsample)
data$GEN_VGEXCL + data$FIPS
ggplot(data, aes(x=AGE_G, y=PR_GEN_VGEXCL1)) +
geom_point(shape=1)
head(predictsample)
ggplot(predictsample, aes(x=AGE_GLABEL, y=PR_GEN_VGEXCL1)) +
geom_point(shape=1)
ggplot(predictsample, aes(x=ST_GEN_VGEXCL, y=PR_GEN_VGEXCL1)) +
geom_point(shape=1)
xyplot(PR_GEN_VGEXCL1~ AGE_GLABEL | STATE, data = predictsample)
ggplot(predictsample, aes(x=INCOMELABEL, y=PR_GEN_VGEXCL1)) +
geom_point(shape=1)
geo_shell[0:10, ]
summary(geo_shell)
glm <- gh_glm0
glm <- gh_glm
geo_shell$ST_GEN_VGEXCL <- statedata$AVG_GEN_VGEXCL[geo_shell$FIPS]
#add predicted values:
geo_shell$PR_GEN_VGEXCL <- predict(
glm, type = "response", newdata = geo_shell, allow.new.levels = TRUE)
head(geo_shell)
geo_shell$MSLABEL <- formatC(geo_shell$MSCODE, width = "1")
geo_shell$MSLABEL[geo_shell$MSLABEL == "1"] <- "RA"
geo_shell$MSLABEL[geo_shell$MSLABEL == "2"] <- "SC"
geo_shell$MSLABEL[geo_shell$MSLABEL == "3"] <- "CC"
geo_shell$MSLABEL[geo_shell$MSLABEL == "4"] <- "IC"
geo_shell$MSLABEL <- factor(geo_shell$MSLABEL)
geo_shell$MSCODE <- factor(geo_shell$MSCODE)
geo_shell$AGE[geo_shell$AGE == "1"] <- "A1"
geo_shell$AGE[geo_shell$AGE == "2"] <- "A2"
geo_shell$AGE[geo_shell$AGE == "3"] <- "A3"
geo_shell$AGE[geo_shell$AGE == "4"] <- "A4"
geo_shell$AGE_GLABEL <- factor(geo_shell$AGE)
geo_shell$RACELABEL <- factor(geo_shell$RACE)
geo_shell$INCOME[geo_shell$INCOME == "1"] <- "I1"
geo_shell$INCOME[geo_shell$INCOME == "2"] <- "I2"
geo_shell$INCOME[geo_shell$INCOME == "3"] <- "I3"
geo_shell$INCOME[geo_shell$INCOME == "4"] <- "I4"
geo_shell$INCOME[geo_shell$INCOME == "5"] <- "I5"
geo_shell$INCOME[geo_shell$INCOME == "6"] <- "I6"
geo_shell$INCOME[geo_shell$INCOME == "7"] <- "I7"
geo_shell$INCOME[geo_shell$INCOME == "8"] <- "I8"
geo_shell$INCOMELABEL <- factor(geo_shell$INCOME)
geo_shell$STATE <- factor(statedata$STATE[geo_shell$FIPS])
geo_shell$ST_GEN_VGEXCL <- statedata$AVG_GEN_VGEXCL[geo_shell$FIPS]
head(geo_shell)
geo_shell$PR_GEN_VGEXCL <- predict(
glm, type = "response", newdata = geo_shell, allow.new.levels = TRUE)
head(geo_shell[, 1, 6, 7, 8,9, 10])
head(geo_shell[, c(1, 6, 7, 8,9, 10)])
geo_shell$PR_GEN_VGEXCL <- predict(
glm, type = "response", newdata = geo_shell, allow.new.levels = TRUE)
summary(geo_shell$PR_GEN_VGEXCL)
predictsample$PR_GEN_VGEXCL <- predict(
glm, type = "response", newdata = predictsample, allow.new.levels = TRUE)
summary(predictsample$PR_GEN_VGEXCL)
summary(predictsample$GEN_VGEXCL)
summary(predictsample$ST_GEN_VGEXCL)
ggplot(geo_shell, aes(x=ST_GEN_VGEXCL, y=PR_GEN_VGEXCL)) +
geom_point(shape=1)
ggplot(geo_shell, aes(x=STATE, y=PR_GEN_VGEXCL)) +
geom_point(shape=1)
data <- read.table("gh_rdata.txt", header=TRUE, quote="\"", sep=",", dec = ".", stringsAsFactors=T) #saved input table
View(data)
View(geo_shell)
factor(statedata$STATE[geo_shell$FIPS])
geo_shell$FIPS
data$FIPS
geo_shell$STATE
geo_shell <- read.table("geo_shell.txt", header=TRUE, quote="\"", sep=",", dec = ".", stringsAsFactors=T)
head(geo_shell)
head(data)
geo_shell$STATE <- factor(statedata$STATE[geo_shell$FIPS])
head(data)
head(geo_shell)
summary(geo_shell$FIPS)
geo_shell$FIPS <- factor(geo_shell$FIPS)
geo_shell$STATE <- factor(statedata$STATE[geo_shell$FIPS])
head(geo_shell)
geo_shell$STATE <- statedata$STATE[geo_shell$FIPS]
head(geo_shell)
levels(data$FIPS)
summary(data$FIPS)
factor(data$FIPS)
data$FIPS <- factor(data$FIPS)
geo_shell$STATE <- statedata$STATE[geo_shell$FIPS]
head(geo_shell[, c(1, 6, 7, 8,9, 10)])
head(geo_shell)
statedata$FIPS <- factor(statedata$FIPS)
geo_shell$STATE <- statedata$STATE[geo_shell$FIPS]
head(geo_shell)
statedata$STATE[geo_shell$FIPS]
pairs(gh_statedata[, c(6, 2, 5, 7)])
gh_statedata[, c(6, 2, 5, 7)]
gh_statedata <- gh_statedata[, c(6, 2, 5, 7)]
pairs(gh_statedata)
